package com.bluebirdaward.joinin.net;

import android.util.Log;

import com.layer.sdk.LayerClient;
import com.layer.sdk.exceptions.LayerException;
import com.layer.sdk.listeners.LayerAuthenticationListener;
import com.parse.FunctionCallback;
import com.parse.ParseCloud;
import com.parse.ParseException;

import java.util.HashMap;

import com.bluebirdaward.joinin.JoininApplication;

public class MyAuthenticationListener implements LayerAuthenticationListener {

    private static final String TAG = MyAuthenticationListener.class.getSimpleName();

    //Called after layerClient.authenticate() executes
    //You will need to set up an Authentication Service to take a Layer App ID, User ID, and the
    //nonce to create a Identity Token to pass back to Layer
    //NOTES:
    // - The method will be called when you call "layerClient.authenticate()" or after
    // Authentication
    //   when the Identity Token generated by your Web Services expires (you explicitly need to set
    //   the expiration date in the Token)
    // - The Nonce returned in this function will expire after 10 minutes, after which you will need
    //   to call
    public void onAuthenticationChallenge(final LayerClient client, final String nonce) {
        final String mUserId = JoininApplication.me.getId();
        Log.d(TAG, "The nonce: " + nonce);

        // Make a request to your backend to acquire a Layer identityToken
        HashMap<String, Object> params = new HashMap<String, Object>();
        params.put("userID", mUserId);
        params.put("nonce", nonce);
        ParseCloud.callFunctionInBackground("generateToken", params, new FunctionCallback<String>() {
            public void done(String token, ParseException e) {
                if (e == null) {
                    client.answerAuthenticationChallenge(token);
                } else {
                    Log.d(TAG, "Parse Cloud function failed to be called to generate token with error: " + e.getMessage());
                }
            }
        });
    }

    //Called when the user has successfully authenticated
    public void onAuthenticated(LayerClient client, String userId) {
        Log.d("DEBUG", "Successful Auth with userId: " + userId);
    }

    //Called when there was a problem authenticating
    //Common causes include a malformed identity token, missing parameters in the identity token,
    // missing
    //or incorrect nonce
    public void onAuthenticationError(LayerClient layerClient, LayerException e) {
        Log.v(TAG, "There was an error authenticating: " + e);
    }

    //Called after the user has been deauthenticated
    public void onDeauthenticated(LayerClient client) {
        Log.v(TAG, "User is deauthenticated.");
    }
}